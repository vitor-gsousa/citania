# Script de deployment para Cit√¢nia PWA no Vercel
# Este script pode ser executado localmente antes do deployment

Write-Host "üöÄ Preparando deployment da Cit√¢nia para o Vercel..." -ForegroundColor Green

# Verificar se os ficheiros essenciais existem
Write-Host "üìÅ Verificando ficheiros essenciais..." -ForegroundColor Yellow
$essentialFiles = @("index.html", "manifest.json", "sw.js", "css/style.css", "js/app.js", "vercel.json")
$allFilesExist = $true

foreach ($file in $essentialFiles) {
    if (Test-Path $file) {
        Write-Host "‚úì $file" -ForegroundColor Green
    } else {
        Write-Host "‚ùå $file n√£o encontrado!" -ForegroundColor Red
        $allFilesExist = $false
    }
}

if (-not $allFilesExist) {
    exit 1
}

# Verificar se o manifest.json √© v√°lido
Write-Host "üì± Validando manifest.json..." -ForegroundColor Yellow
try {
    $manifest = Get-Content "manifest.json" -Raw | ConvertFrom-Json
    Write-Host "‚úì Manifest v√°lido: $($manifest.name)" -ForegroundColor Green
    
    if (-not $manifest.start_url) {
        throw "start_url em falta"
    }
    if (-not $manifest.display) {
        throw "display em falta"  
    }
    if (-not $manifest.name) {
        throw "name em falta"
    }
} catch {
    Write-Host "‚ùå Erro no manifest.json: $($_.Exception.Message)" -ForegroundColor Red
    exit 1
}

# Verificar vercel.json
Write-Host "‚öôÔ∏è Verificando vercel.json..." -ForegroundColor Yellow
try {
    $vercel = Get-Content "vercel.json" -Raw | ConvertFrom-Json
    Write-Host "‚úì vercel.json v√°lido" -ForegroundColor Green
    
    # Verificar conflitos entre routes e outras configura√ß√µes
    if ($vercel.routes -and ($vercel.rewrites -or $vercel.redirects -or $vercel.headers -or $vercel.cleanUrls -or $vercel.trailingSlash)) {
        Write-Host "‚ùå ERRO: 'routes' n√£o pode ser usado com 'rewrites', 'redirects', 'headers', 'cleanUrls' ou 'trailingSlash'" -ForegroundColor Red
        Write-Host "   Solu√ß√£o: Migrar 'routes' para 'rewrites' e 'headers' separados" -ForegroundColor Yellow
        exit 1
    }
    
    if ($vercel.builds) {
        Write-Host "‚ö†Ô∏è Aviso: configura√ß√£o builds presente (pode n√£o ser necess√°ria para apps est√°ticas)" -ForegroundColor Yellow
    }
    
    if ($vercel.routes) {
        Write-Host "‚ö†Ô∏è Aviso: 'routes' √© deprecated, considere usar 'rewrites' e 'headers'" -ForegroundColor Yellow
    }
    
    if ($vercel.rewrites) {
        Write-Host "‚úì Configura√ß√£o moderna com rewrites" -ForegroundColor Green
    }
} catch {
    Write-Host "‚ùå Erro no vercel.json: $($_.Exception.Message)" -ForegroundColor Red
    exit 1
}

Write-Host ""
Write-Host "‚úÖ Todas as verifica√ß√µes passaram!" -ForegroundColor Green
Write-Host "üéØ Pronto para deployment no Vercel!" -ForegroundColor Green
Write-Host ""
Write-Host "Pr√≥ximos passos:" -ForegroundColor Cyan
Write-Host "1. git add ." -ForegroundColor White
Write-Host "2. git commit -m 'Corrigir configura√ß√£o Vercel para app est√°tica'" -ForegroundColor White
Write-Host "3. git push origin main" -ForegroundColor White
Write-Host "4. O Vercel far√° redeploy autom√°tico" -ForegroundColor White
Write-Host ""
Write-Host "üí° Alternativa para redeploy imediato:" -ForegroundColor Cyan
Write-Host "   - Aceder ao dashboard do Vercel" -ForegroundColor White
Write-Host "   - Ir ao projeto 'citania'" -ForegroundColor White
Write-Host "   - Clicar em 'Redeploy'" -ForegroundColor White